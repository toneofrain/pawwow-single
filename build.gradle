buildscript {
    ext {
        queryDslVersion = '5.0.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

jar {
    enabled = false
}

group = 'dev.saintho'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation (
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-data-redis',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-mail',
            'org.springframework.boot:spring-boot-starter-thymeleaf',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-parent:3.0.6',

            'org.springframework.kafka:spring-kafka',

            "com.querydsl:querydsl-jpa:${queryDslVersion}"
    )

    compileOnly (
            'org.projectlombok:lombok'
    )

    runtimeOnly (
            'com.h2database:h2',
            'com.mysql:mysql-connector-j'
    )

    annotationProcessor (
            'org.projectlombok:lombok',
            'org.springframework.boot:spring-boot-configuration-processor',
            "com.querydsl:querydsl-apt:${queryDslVersion}"
    )

    testImplementation (
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.kafka:spring-kafka-test'
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
